'use client';
import React, { useState } from 'react';
import { motion , AnimatePresence } from 'framer-motion';

export default function GameHUD({
  stage, setStage, japCount, flowers, score, doJap, offerFlower, setBgMusicOn, resetGame
}: any) {
  const [quizOpen, setQuizOpen] = useState(false);
  const [quizScore, setQuizScore] = useState(0);

  const quizQuestions = [
    { q: 'рд░рд╛рдзрд╛-рдХреГрд╖реНрдг рдкреНрд░реЗрдо рдХрд╛ рдореВрд▓ рдХреНрдпрд╛ рд╣реИ?', a: ['рднрд╛рд╡', 'рд╕реНрд╡рд╛рд░реНрде', 'рджрд┐рдЦрд╛рд╡рд╛', 'рдзрди'], correct: 0 },
    { q: 'рд░рд╛рдзрд╛ рдирд╛рдо рдЬрдкрдиреЗ рд╕реЗ рдорди рдХреНрдпрд╛ рд╣реЛрддрд╛ рд╣реИ?', a: ['рдкрд╡рд┐рддреНрд░', 'рдШрдмрд░рд╛рдирд╛', 'рднреНрд░рд╛рдордХ', 'рдЕрд▓рд┐рдкреНрдд'], correct: 0 },
  ];

  const handleAnswer = (idx:number, choice:number) => {
    if (choice === quizQuestions[idx].correct) {
      setQuizScore((s) => s + 1);
    }
    if (idx === quizQuestions.length - 1) {
      // end quiz - award score
      setTimeout(() => {
        setQuizOpen(false);
        // unlock next stage
        setStage((s:any) => Math.max(s, 4));
      }, 800);
    }
  };

  return (
    <>
      {/* top-right HUD */}
      <div className="fixed top-6 right-6 z-30 flex flex-col gap-4">
        <div className="card-glass px-4 py-2 rounded-xl text-sm">
          <div className="font-semibold">рднрдХреНрддрд┐ рдКрд░реНрдЬрд╛: {score}</div>
          <div className="text-xs text-pink-200">рдЬрдк: {japCount} тАв рдлреВрд▓: {flowers}</div>
        </div>

        <div className="flex gap-2">
          <button onClick={() => setStage(1)} className="px-3 py-2 rounded bg-white/6">рдирд╛рдо рдЬрдкреЛ</button>
          <button onClick={() => setStage(2)} className="px-3 py-2 rounded bg-white/6">рдлреВрд▓ рдЕрд░реНрдкрдг</button>
          <button onClick={() => setQuizOpen(true)} className="px-3 py-2 rounded bg-white/6">рдкреНрд░рд╢реНрди</button>
          <button onClick={() => setStage(4)} className="px-3 py-2 rounded bg-white/6">рд░рд╛рд╕ рд▓реАрд▓рд╛</button>
        </div>

        <div className="card-glass px-3 py-2 rounded-xl text-sm flex gap-2 items-center">
          <button onClick={() => setBgMusicOn((s:any)=>!s)} className="px-2 py-1 rounded bg-white/8">ЁЯФК</button>
          <button onClick={resetGame} className="px-2 py-1 rounded bg-white/8">тЖ║ reset</button>
        </div>
      </div>

      {/* quiz modal */}
      <AnimatePresence>
        {quizOpen && (
          <motion.div initial={{ opacity:0 }} animate={{ opacity:1 }} exit={{ opacity:0 }} className="fixed inset-0 z-40 flex items-center justify-center bg-black/60">
            <motion.div initial={{ scale:0.9 }} animate={{ scale:1 }} className="bg-white/5 p-6 rounded-xl backdrop-blur-md">
              <h3 className="text-xl font-semibold mb-2">ЁЯУ┐ рдкреНрд░реЗрдо рдХрд╛ рдкреНрд░рд╢реНрди</h3>
              {quizQuestions.map((qq, i) => (
                <div key={i} className="mb-3">
                  <div className="font-medium">{qq.q}</div>
                  <div className="mt-2 flex gap-2 flex-wrap">
                    {qq.a.map((ans, ai) => (
                      <button key={ai} onClick={() => handleAnswer(i, ai)} className="px-3 py-1 rounded bg-white/6">{ans}</button>
                    ))}
                  </div>
                </div>
              ))}
              <div className="text-sm text-pink-200">рд╕рд╣реА рдЙрддреНрддрд░: {quizScore}</div>
              <div className="mt-4 flex justify-end">
                <button onClick={() => setQuizOpen(false)} className="px-4 py-2 rounded bg-white/10">Close</button>
              </div>
            </motion.div>
          </motion.div>
        )}
      </AnimatePresence>
    </>
  );
}
